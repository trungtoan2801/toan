#pragma warning (disable:4996)
#include <iostream>
using namespace std;
struct Point 
{
	int hang,cot;
};
Point stop;
Point vitri[11];
int visit[11];
int so_dia_diem;
int kq;
int MT_ke[11][11];
int tinh(Point ht, Point trc)
{
	int D;
	int x,y;
	y = trc.hang - ht.hang;
	x = trc.cot - ht.cot;
	if(x<0) x = x * (-1);
	if(y<0) y = y * (-1);
	D = x + y;
	return D;
}
void tinh_MTke(int start)
{
	for(int i = 0; i<= so_dia_diem; i++)
	{
		int tp = tinh(vitri[start], vitri[i]);
		MT_ke[start][i] = tp;
		MT_ke[i][start] = tp;
	}
}
void back_track(int vt, int diemtruoc, int kc)
{
	if(vt >= so_dia_diem)
	{
		int A = kc;
		A = A + tinh(vitri[vt],stop);
		if(kq > A)
		{
			kq = A;
		}
		return;
	}
	for(int i = 1; i<= so_dia_diem; i++)
	{
		if(visit[i] ==0)
		{
			visit[i] = 1;
			back_track(vt+1, i, kc + MT_ke[i][diemtruoc]);
			visit[i] = 0;
		}
	}
}
int main()
{
	freopen("input.txt","r",stdin);
	int T;
	cin >> T;
	for(int tc = 1; tc<=T; tc++)
	{
		cin >> vitri[0].cot >> vitri[0].hang >> stop.cot >> stop.hang;
		cin >> so_dia_diem;
		for(int i = 1; i<= so_dia_diem; i++)
		{
			cin >> vitri[i].cot >> vitri[i].hang;
		}
		kq = 99999999;
		for(int i = 1; i<= so_dia_diem; i++)
		{
			visit[i] = 0;
		}
		for(int i = 0; i<=so_dia_diem; i++)
		{
			tinh_MTke(i);
		}
		back_track(1,0,0);
		cout <<"Case #" << tc << " " << kq << endl;
			
	}
	return 0;
}





/* input
10

57 61 50 61

5 86 53 4 104 27 3 55 34 69 0

96 47 60 28

5 0 6 43 84 84 35 44 57 95 50

48 32 67 42

5 53 51 92 1 48 19 8 3 82 37

97 28 66 41

5 93 72 9 79 46 31 12 66 54 11

38 62 93 86

5 87 83 40 83 83 26 98 11 74 103

23 42 71 16

5 12 76 47 74 24 5 88 82 45 85

96 85 14 6

5 86 91 104 60 72 35 59 22 58 39

99 49 68 1

5 48 80 96 101 56 88 75 56 25 81

51 14 75 51

5 29 62 103 15 75 84 67 94 96 57

87 39 57 77

5 105 85 31 40 1 88 83 89 29 18

 

Case #1 393

Case #2 323

Case #3 267

Case #4 294

Case #5 281

Case #6 300

Case #7 219

Case #8 283

Case #9 295

Case #10 344 */
