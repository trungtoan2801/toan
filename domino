#include <iostream>
using namespace std;
int map[7][8];
int visit[7][8];
int MT_ke[7][7];
int dem;
void back_track(int hang, int cot)
{
	if(hang == 7)
	{
		dem++;
	}
	else
	{
		if(visit[hang][cot] == 1)
		{
			int row,col;
			if(cot == 7)
			{
				row = hang +1;
				col = 0;
			}
			else
			{
				row = hang;
				col = cot +1;
			}
			back_track(row,col);
		}
		else
		{
			for(int i =0; i<=1; i++)
			{
				if(i ==0 )		// check hang
				{
					int x1 = hang;
					int y1 = cot+1;
					if(cot<7 && MT_ke[map[hang][cot]][map[x1][y1]] == 0 && visit[x1][y1] == 0)
					{
						MT_ke[map[hang][cot]][map[x1][y1]] = 1;  //danh dau o da dat
						MT_ke[map[x1][y1]][map[hang][cot]] = 1;
						visit[hang][cot] = 1;
						visit[x1][y1] = 1;
						int row, col;
						if(cot == 7)
						{
							row = hang+1;
							col = 0;
						}
						else
						{
							row = hang;
							col = cot +1;
						}
						back_track(row,col);
						MT_ke[map[hang][cot]][map[x1][y1]] = 0; 
						MT_ke[map[x1][y1]][map[hang][cot]] = 0;
						visit[hang][cot] = 0;
						visit[x1][y1] = 0;
					}
				}
				else
				{
					int x2 = hang+1;
					int y2 = cot;
					if(hang<6 && MT_ke[map[hang][cot]][map[x2][y2]] == 0 && visit[x2][y2] == 0)
					{
						MT_ke[map[hang][cot]][map[x2][y2]] = 1;  //danh dau o da dat
						MT_ke[map[x2][y2]][map[hang][cot]] = 1;
						visit[hang][cot] = 1;
						visit[x2][y2] = 1;
						int row, col;
						if(cot == 7)
						{
							row = hang+1;
							col = 0;
						}
						else
						{
							row = hang;
							col = cot +1;
						}
						back_track(row,col);
						MT_ke[map[hang][cot]][map[x2][y2]] = 0; 
						MT_ke[map[x2][y2]][map[hang][cot]] = 0;
						visit[hang][cot] = 0;
						visit[x2][y2] = 0;
					}
				}
			}
		}
	}
}
int main()
{
	freopen("input.txt","r",stdin);
	int T;
	cin >>T;
	for(int tc = 1; tc <= T; tc++)
	{
		for(int i = 0; i<7; i++)
		{
			for(int j = 0; j<8; j++)
			{
				cin >> map[i][j];
				visit[i][j] =0;
			}
		}
		for(int i = 0; i<7; i++)
		{
			for(int j = 0; j<7; j++)
			{
				MT_ke[i][j] = 0;
			}
		}
		back_track(0,0);
		cout << "Case #" << tc << endl << dem << endl;
		dem  = 0;
	}
	return 0;
}

//input
2

6 1 6 5 3 2 5 0

6 6 0 1 6 0 4 4

2 2 3 6 5 5 1 5

1 2 0 4 4 3 4 2

5 2 1 1 4 1 3 0

3 3 0 2 3 5 2 6

1 3 4 6 4 5 0 0

 

6 6 6 0 1 4 6 3

2 5 3 3 3 5 5 4

0 0 4 3 3 1 2 4

4 4 2 0 5 5 3 0

0 1 2 2 6 1 2 1

4 6 2 6 5 6 0 4

5 0 5 1 1 1 2 3
