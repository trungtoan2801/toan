#include <iostream>
using namespace std;

int n;
int a[101][101];
int copyA[101][101];
int visitBFS[101][101];
int dx1[100000] , dy1[100000];
int moveX[]= {0, -1, 0, 1};
int moveY[]= {-1, 0, 1, 0};
void reset(){
	for(int i = 1; i <= n; i++){
		for(int j = 1; j <= n; j++){
			visitBFS[i][j] = 0;
		}
	}
}

void BFS(int start, int end){
	//them dinh vao hang doi
	int front = -1, rear = -1;
	rear++;
	dx1[rear] = start;
	dy1[rear] = end;
	visitBFS[start][end] = 1;
	int demMau[6] = {0};
	int luuVet[2][100000];
	int k = 0;

	while(front != rear){
		front++;
		//Lay dinh ra khoi hang doi
		int v = dx1[front];
		int x = dy1[front];
		//Co 2 truong hop neu la 0 hoac khac 0
		if(a[v][x] == 0){
			//luu lai cac toa do cua phan tu 0 do de lat to mau
			k++;
			luuVet[0][k] = v;
			luuVet[1][k] = x;
		}
		if(a[v][x] == 0){
			//Them cac dinh ke voi dinh 0 vao
			for(int k = 0 ; k < 4; k++){
				int im = v + moveX[k];
				int jm = x + moveY[k];
				if(im > 0 && im <= n && jm > 0 && jm <= n && visitBFS[im][jm] == 0){
					visitBFS[im][jm] = 1;
					rear++;
					demMau[a[im][jm]] ++;
					dx1[rear] = im;
					dy1[rear] = jm;
				}
			}
		}
		if(a[v][x] != 0){					//neu khac 0 thi chi dem cac phan tu bang voi cha no
			for(int k = 0 ; k < 4; k++){
				int im = v + moveX[k];
				int jm = x + moveY[k];
				if(im > 0 && im <= n && jm > 0 && jm <= n && visitBFS[im][jm] == 0 && a[im][jm] == a[v][x]){
					visitBFS[im][jm] = 1;
					rear++;
					demMau[a[im][jm]] ++;
					dx1[rear] = im;
					dy1[rear] = jm;
				}
			}
		}
	}

	//Tim phan tu lap lai lon nhat
	int maxdem = 0;
	int luuMauMax;
	for(int i = 1; i <= 6; i++){
		if(maxdem <= demMau[i]){
			maxdem = demMau[i];
			luuMauMax = i;
		}
	}
	//Cho cac phan tu 0 do thanh mau lon nhat
	for(int i = 1; i <= k; i++){
		copyA[luuVet[0][i]][luuVet[1][i]] = luuMauMax;
	}
}

void demVung(int s, int t){
	//dung bfs de dem
	int front = -1, rear = -1;
	//them dinh vao hang doi
	rear++;
	dx1[rear] = s;
	dy1[rear] = t;
	visitBFS[s][t] = 1;
	while(front != rear){
		front++;
		int v = dx1[front];
		int x = dy1[front];
		for(int k = 0; k < 4; k++){
			int im = v + moveX[k];
			int jm = x + moveY[k];
			if(im > 0 && im <= n && jm > 0 && jm <= n && visitBFS[im][jm] == 0
				&& copyA[im][jm] == copyA[v][x]){
				visitBFS[im][jm] = 1;
				rear++;
				dx1[rear] = im;
				dy1[rear] = jm;
			}
		}
	}
}
int main(){
	freopen("Text.txt","r",stdin);
	int t; cin >> t;
	for(int tc = 1; tc <= t; tc++){
		//reset();
		cin >> n;
		for(int i = 1; i <= n; i++){
			for(int j = 1; j <= n ;j++){
				cin >> a[i][j];
				copyA[i][j] = a[i][j];
				visitBFS[i][j] = 0;
			}
		}

		for(int i = 1; i <= n; i++){
			for(int j = 1; j <= n ;j++){
				if(copyA[i][j] == 0){
					BFS(i, j);
					reset();
				}
			}
		}

		//============================IN RA MAN HINH=========================
		int cnt = 0;
		for(int i = 1; i <= n; i++){
			for(int j = 1; j <= n ;j++){
				if(visitBFS[i][j] == 0){
					cnt++;
					demVung(i, j);
				}
			}
		}
		cout << "Case #" << tc << endl << cnt << endl;
	}
	return 0;
}
					
// input
3
5

5 5 1 4 4  

4 0 2 4 2  

5 0 0 2 0

5 4 3 0 1

1 3 3 2 1

7 

0 0 0 0 0 0 0

0 0 0 0 0 0 0

0 0 0 0 0 0 0

5 0 5 0 5 0 5

0 0 0 0 0 0 0

0 0 0 0 0 0 0

0 0 0 0 0 0 0

10

1 3 5 1 4 0 0 4 2 1

1 1 2 1 1 0 5 0 2 1

5 0 2 0 4 4 4 0 1 1

0 2 2 4 0 5 4 2 1 3

1 1 2 2 2 3 3 2 1 1

5 1 1 2 0 3 3 2 2 1

3 1 1 1 0 0 1 2 2 5

3 1 4 1 2 0 4 0 0 5

4 0 3 3 1 3 3 0 0 1

5 0 3 1 4 3 3 1 2 3
